%%% Au의 n, k값 구하는 함수 %%%
%   - lambda : 100nm ~ 9919nm
%   - Using Lagrange interpolation


function result=fun_Au_nk(lambda);

lambda=lambda*10^9;

Au_data=[100	1.2	0.836	;101	1.207	0.842	;102	1.21	0.848	;103	1.213	0.853	;
104	1.215	0.86	;105	1.217	0.865	;106	1.217	0.87	;107	1.218	0.878	;
108	1.218	0.885	;109	1.22	0.893	;110	1.222	0.9	;111	1.223	0.907	;
112	1.225	0.914	;113	1.228	0.922	;114	1.232	0.927	;115	1.237	0.932	;
116	1.242	0.935	;117	1.247	0.942	;118	1.25	0.95	;119	1.255	0.955	;
120	1.26	0.962	;121	1.265	0.967	;122	1.27	0.975	;123	1.275	0.982	;
124	1.28	0.987	;125	1.285	0.994	;126	1.29	1	;127	1.295	1.005	;
128	1.3	1.012	;129	1.304	1.017	;130	1.308	1.02	;131	1.313	1.027	;
132	1.318	1.032	;133	1.323	1.038	;134	1.328	1.045	;135	1.333	1.05	;
136	1.338	1.053	;137	1.345	1.058	;138	1.35	1.063	;139	1.355	1.067	;
140	1.36	1.072	;145	1.386	1.089	;150	1.419	1.102	;155	1.45	1.108	;
160	1.483	1.106	;165	1.512	1.093	;170	1.519	1.07	;175	1.5	1.07	;
180	1.47	1.085	;185	1.442	1.107	;190	1.427	1.135	;195	1.424	1.17	;
200	1.427	1.215	;206.6	1.422	1.306	;213.8	1.432	1.364	;217.5	1.438	1.388	;
221.4	1.442	1.418	;225.4	1.452	1.442	;229.6	1.454	1.478	;233.9	1.462	1.51	;
238.4	1.47	1.55	;243.1	1.478	1.59	;253	1.49	1.698	;258.3	1.504	1.748	;
263.8	1.546	1.784	;269.5	1.598	1.822	;275.5	1.648	1.852	;281.8	1.69	1.882	;
288.3	1.742	1.9	;295.2	1.776	1.918	;302.4	1.812	1.92	;310	1.83	1.916	;
317.9	1.84	1.904	;326.3	1.824	1.878	;335.1	1.798	1.86	;344.4	1.766	1.846	;
354.2	1.74	1.848	;364.7	1.716	1.862	;375.7	1.696	1.906	;387.5	1.674	1.936	;
400	1.658	1.956	;413.3	1.636	1.958	;427.5	1.616	1.94	;442.8	1.562	1.904	;
459.2	1.426	1.846	;476.9	1.242	1.796	;495.9	0.916	1.84	;516.6	0.608	2.12	;
539.1	0.402	2.54	;563.6	0.306	2.88	;590.4	0.236	2.97	;619.9	0.194	3.06	;
652.6	0.166	3.15	;688.8	0.16	3.8	;729.3	0.164	4.35	;774.9	0.174	4.86	;
826.6	0.188	5.39	;885.6	0.21	5.88	;953.7	0.236	6.47	;1033	0.272	7.07	;
1127	0.312	7.93	;1240	0.372	8.77	;1265	0.389	8.09	;1291	0.403	8.25	;
1319	0.419	8.42	;1384	0.436	8.59	;1378	0.454	8.77	;1409	0.473	8.96	;
1442	0.493	9.15	;1476	0.515	9.36	;1512	0.537	9.58	;1550	0.559	9.81	;
1590	0.583	10.1	;1631	0.609	10.3	;1675	0.636	10.6	;1722	0.665	10.9	;
1771	0.696	11.2	;1823	0.73	11.5	;1879	0.767	11.9	;1937	0.807	12.2	;
2000	0.85	12.6	;2066	0.896	13	;2138	0.947	13.4	;2214	1.002	13.9	;
2296	1.063	14.4	;2384	1.13	14.9	;2480	1.205	15.5	;2583	1.287	16.1	;
2695	1.379	16.8	;2818	1.482	17.5	;2952	1.598	18.3	;3100	1.728	19.2	;
3179	1.8	19.7	;3263	1.876	20.2	;3351	1.958	20.7	;3444	2.046	21.3	;
3542	2.141	21.9	;3647	2.242	22.5	;3757	2.352	23.1	;3875	2.471	23.9	;
4000	2600	24.6	;4133	2.749	25.4	;4.275	2.912	26.3	;4428	3.091	27.2	;
4592	3.289	28.2	;4769	3.507	29.3	;4959	3.748	30.5	;5166	4.007	31.7	;
5391	4.292	32.9	;5636	4.611	34.3	;5904	4.971	35.9	;6199	5.423	37.5	;
6358	5.684	38.3	;6526	5.966	39.1	;6702	6.27	40.1	;6888	6.598	41	;
7085	6.937	42	;7293	7.282	43	;7514	7.655	44.1	;7749	8.06	45.2	;
7999	8.5	46.4	;8266	9.016	47.6	;8551	9.582	48.8	;8856	10.21	50.2	;
9184	10.84	51.6	;9537	11.51	53.1	;9919	12.24	54.7];


Au_data_length=length(Au_data(:,1));
for cnt=1:Au_data_length-1
    if (lambda>=Au_data(cnt,1))&(lambda<Au_data(cnt+1,1))
        break;
    end
end


%%% Lagrange interpolation %%%
xi=Au_data(cnt,1);   ni=Au_data(cnt,2);   ki=Au_data(cnt,3);
xj=Au_data(cnt+1,1);   nj=Au_data(cnt+1,2);   kj=Au_data(cnt+1,3);
x=lambda;

n=(x-xj)/(xi-xj)*ni+(x-xi)/(xj-xi)*nj;
k=(x-xj)/(xi-xj)*ki+(x-xi)/(xj-xi)*kj;

result=n+j*k;